{
    "configurations": {
        "org.apache.jackrabbit.oak.segment.SegmentNodeStoreService": {
            "name": "Default NodeStore"
        },
        "org.apache.sling.commons.log.LogManager.factory.config~oak.log": {
            "org.apache.sling.commons.log.pattern": "%d{dd.MM.yyyy HH:mm:ss.SSS} *%level* [%thread] %logger %msg%n",
            "org.apache.sling.commons.log.names": [
                "org.apache.jackrabbit.oak"
            ],
            "org.apache.sling.commons.log.level": "debug",
            "org.apache.sling.commons.log.file": "logs/oak.log"
        },
        "org.apache.sling.commons.log.LogManager.factory.config~composum.log": {
            "org.apache.sling.commons.log.pattern": "%d{dd.MM.yyyy HH:mm:ss.SSS} *%level* [%thread] %logger %msg%n",
            "org.apache.sling.commons.log.names": [
                "com.composum"
            ],
            "org.apache.sling.commons.log.level": "debug",
            "org.apache.sling.commons.log.file": "logs/composum.log"
        },
        "org.apache.jackrabbit.oak.segment.SegmentNodeStoreService~global": {
            "name": "Default NodeStore",
            "repository.home": "${sling.home}/composite/repository-libs"
        },
        "org.apache.jackrabbit.oak.composite.CrossMountReferenceValidatorProvider": {
            "failOnDetection": true
        },
        "org.apache.jackrabbit.oak.composite.MountInfoProviderService": {
            "mountName": "libs",
            "readOnlyMount": false,
            "pathsSupportingFragments": [
                "/oak:index/*$",
                "/var/sling/bundle-content/*$"
            ],
            "mountedPaths": [
                "/libs",
                "/apps",
                "/static",
                "/jcr:system/rep:permissionStore/oak:mount-libs-default"
            ]
        },
        "org.apache.sling.jcr.contentloader.internal.BundleContentLoaderListener": {
            "includedTargets": [
                "^\/apps\/.*$",
                "^\/libs\/.*$",
                "^\/oak:index\/.*$",
                "^\/static\/.*$"
            ]
        }
    }
}